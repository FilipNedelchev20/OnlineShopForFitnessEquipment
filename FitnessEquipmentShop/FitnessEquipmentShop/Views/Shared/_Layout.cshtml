<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"] - Fitness Shop</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">Fitness Shop</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Product")">Products</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Category")">Categories</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Cart")">Cart</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Wishlist")">Wishlist</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Order")">My Orders</a>
                    </li>
                </ul>

                @using FitnessEquipmentShop.Data.Models.Entities
                @using Microsoft.AspNetCore.Identity
                @inject SignInManager<User> SignInManager
                @inject UserManager<User> UserManager

                <ul class="navbar-nav ms-auto">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var currentUser = await UserManager.GetUserAsync(User);
                        var isAdmin = await UserManager.IsInRoleAsync(currentUser, "Admin");

                        <li class="nav-item">
                            <a class="nav-link text-light" href="#">Welcome, @User.Identity.Name!</a>
                        </li>

                        @if (isAdmin)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="adminDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Admin Panel
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="adminDropdown">
                                    <li><a class="dropdown-item" href="@Url.Action("Create", "Products")">Add Product</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Create", "Category")">Add Category</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("AssignRole", "Admin")">Manage Users</a></li>
                                </ul>
                            </li>
                        }

                        <li class="nav-item">
                            <form method="post" asp-area="Identity" asp-page="/Account/Logout">
                                <button type="submit" class="btn btn-danger">Logout</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>

                    }
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody()
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
